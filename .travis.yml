language: cpp

branches:
  only:
    - master
    - develop
    - feature*
compiler:
  - gcc
  - clang

os:
  - osx
  - linux  
  
before_install:
  # g++4.8.1
  - if [ "$CXX" == "g++" ]; then
      if [[ ${TRAVIS_OS_NAME} = linux ]]; then
        sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test; 
      fi 
    fi

  # clang 3.4
  - if [ "$CXX" == "clang++" ]; then
      if [[ ${TRAVIS_OS_NAME} = linux ]]; then  
        sudo add-apt-repository -y ppa:h-rayflood/llvm;
      fi
    fi

  - if [[ ${TRAVIS_OS_NAME} = linux ]]; then sudo apt-get update -qq; fi
  
install:
  - if [ "$CXX" == "g++" ]; then if [[ ${TRAVIS_OS_NAME} = linux ]]; then sudo apt-get install -qq g++-4.8; fi fi
  - if [ "$CXX" == "g++" ]; then if [[ ${TRAVIS_OS_NAME} = linux ]]; then export CXX="g++-4.8"; fi fi 
  - if [ "$CXX" == "clang++" ]; then if [[ ${TRAVIS_OS_NAME} = linux ]]; then sudo apt-get install -qq clang-3.4; fi fi
  - if [ "$CXX" == "clang++" ]; then if [[ ${TRAVIS_OS_NAME} = linux ]]; then export CXX="clang++-3.4"; fi fi

  - if [[ ${TRAVIS_OS_NAME} = linux ]]; then sudo apt-get install git libgtk2.0-dev pkg-config libavcodec-dev libavformat-dev libswscale-dev; fi
  - if [[ ${TRAVIS_OS_NAME} = linux ]]; then sudo apt-get install python-dev python-numpy libtbb2 libtbb-dev libjpeg-dev libpng-dev libtiff-dev libjasper-dev libdc1394-22-dev checkinstall; fi
    
   # Getting newest boost
  - if [[ ${TRAVIS_OS_NAME} = linux ]]; then sudo add-apt-repository -y ppa:boost-latest/ppa; fi
  - if [[ ${TRAVIS_OS_NAME} = linux ]]; then sudo apt-get update; fi
  - if [[ ${TRAVIS_OS_NAME} = linux ]]; then sudo apt-get install libboost1.55-all-dev; fi
  
  - if [[ ${TRAVIS_OS_NAME} = osx ]]; then brew update; fi
  - if [[ ${TRAVIS_OS_NAME} = osx ]]; then brew tap homebrew/science; fi
  - if [[ ${TRAVIS_OS_NAME} = osx ]]; then brew install tbb opencv3; fi
    
before_script:
  - git clone https://github.com/Itseez/opencv.git
  - cd opencv
  - mkdir build
  - cd build
  - cmake ..
  - make -j2
  - sudo make -j2 install
  - cd ../..

script:
  - $CXX --version
  - mkdir build
  - cd build
  - cmake -D CMAKE_BUILD_TYPE=RELEASE .. 
  - make -j2
  - ../build/bin/FaceLandmarkImg -fdir "../videos/" -ofdir "./demo_img/" -oidir "./demo_img/" -wild -q
  - ../build/bin/FaceLandmarkVidMulti -f ../videos/multi_face.avi -ov multi_face.avi -q
  - ../build/bin/FeatureExtraction -rigid -verbose -f "../videos/1815_01_008_tony_blair.avi" -ov blair.avi -of "output_features/1815_01_008_tony_blair.txt" -simalign output_features/aligned -ov feat_test.avi -hogalign hog_test.dat -q
  - ../build/bin/FaceLandmarkVid -f "../videos/1815_01_008_tony_blair.avi" -f "../videos/0188_03_021_al_pacino.avi" -f "../videos/0217_03_006_alanis_morissette.avi" -f "../videos/0244_03_004_anderson_cooper.avi" -q